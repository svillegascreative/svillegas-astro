---
/* Displays a bunch of tech logos in a fun way! */

import techSkills from "../data/tech-skills.json";
import { shuffle } from "../utils/shuffle";

const skills = shuffle(techSkills);
---

<style>
  ul {
    --grid-box-size: var(--s-2);
    list-style-type: ""; /* removes markers */
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--grid-box-size), 1fr));
    grid-template-rows: repeat(auto-fit, var(--grid-box-size));
    grid-gap: var(--s-2);
    grid-auto-flow: dense;
    align-items: center;
    aspect-ratio: 1/1;
  }

  li {
    position: relative;
    grid-row: span var(--grid-span);
    grid-column: span var(--grid-span);

    svg {
      display: block;
      fill: lightgrey;
      transition: all 0.3s ease;
    }
    span {
      position: absolute;
      /* bottom: calc(-1 * var(--s3)); */
      left: 50%;
      background-color: #fff;
      filter: drop-shadow(0 0 10px #fff);
      padding: var(--s-4) var(--s-2);
      border-radius: var(--s3);
      border: 2px solid var(--skill-color);
      font-weight: bold;
      font-size: var(--s-1);
      text-transform: uppercase;
      white-space: nowrap;
      opacity: 0;
      transition: all 0.3s ease;
    }

    &:hover {
      z-index: 2;

      svg {
        fill: var(--skill-color);
        transform: scale(1.2);
        transform-origin: center;
        transition: all 0.3s ease;
        filter: drop-shadow(0 0 20px #fff) drop-shadow(0 0 20px #fff)
          drop-shadow(0 0 20px #fff);
      }

      span {
        opacity: 1;
        transition: all 0.3s ease;
        animation-name: reveal-name;
        animation-delay: 1s;
        animation-duration: 0.5s;
        animation-fill-mode: both;
      }
    }
  }

  @keyframes reveal-name {
    from {
      transform: translate(-50%, 0);
      opacity: 0;
    }
    to {
      transform: translate(-50%, 50%);
      opacity: 1;
    }
  }
</style>

<ul class="logo-soup" aria-label="tech tools">
  {
    skills.map((skill) => (
      <li
        style={`--grid-span: ${+skill.weight + 3}; --skill-color: ${
          skill.color
        }`}
      >
        <svg
          role="img"
          aria-hidden
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <Fragment set:html={skill.svgPath} />
        </svg>
        <span>{skill.name}</span>
      </li>
    ))
  }

  <!-- These are placed in the top row pseudo-randomly to create an uneven edge -->
  <li aria-hidden style="grid-row: 1 / span 3; grid-column: 1 / span 5"></li>
  <li aria-hidden style="grid-row: 1 / span 2; grid-column: 19 / span 12"></li>
  <li aria-hidden style="grid-row: 1 / span 4; grid-column: -8 / span 4"></li>
</ul>
